[downloads]  # External data downloads
    [downloads.buildings]  # download, prep
    url = "https://storage.googleapis.com/open-buildings-data/v2/points_s2_level_4_gzip/{s2token}_buildings.csv.gz"  # Google buildings URL
    dir = "{app_dir}/downloads/google_buildings"  # Google buildings download directory
    xy_cols =  ["longitude", "latitude"]          # longitude and latitude column names

    [downloads.shapes]  # download
    url = "https://geodata.ucdavis.edu/gadm/gadm4.1/shp/gadm41_{country_code}_shp.zip"  # GADM shapes URL
    dir = "{app_dir}/downloads/GADM_shapes"  # GADM shapes download directory

[inputs]  # Generated by the data preparation workflow from downloads and user provided files
all_locations_file = "{data_dir}/{country_code}/inputs/all_locations.csv"  # All locations in the country
control_file = "{data_dir}/{country_code}/inputs/.stop"  # Stop file for the data preparation workflow
log_file = "{data_dir}/{country_code}/inputs/prep.log"   # Log file for the data preparation workflow

    [inputs.buildings]  # Buildings data clipped using country GADM shapes  
    file = "{data_dir}/{country_code}/inputs/buildings_{country_code}.feather" # file path
    xy_cols =  ["lon", "lat"]  # longitude and latitude column names 

    [inputs.shapes]  #  country GADM shapes, for the specified admin level, extracted from the downlaoded GADM file
    file = "{data_dir}/{country_code}/inputs/shapes/gadm41_{country_code}_{level}.geojson"  # file path
    adm_cols = ["NAME_2", "NAME_3"]  # administrative levels column names

    [inputs.village_centers]  # Village center locations, prepared from user provided village center file    
    file = "{data_dir}/{country_code}/inputs/village_centers.csv"  # file path
    xy_cols =  ["lon", "lat"]            # longitude and latitude column names
    adm_cols = ["adm2", "adm3", "adm4"]  # administrative levels column names     

    [inputs.baseline_facilities]  # Optional, baseline health facility locations, prepared from user provided baseline facility file
    file = "{data_dir}/{country_code}/inputs/baseline_facilities.csv"  # file path
    xy_cols = ["lon", "lat"]     # longitude and latitude column names
    adm_cols = ["adm2", "adm3"]  # administrative levels column names

    [inputs.households]  # Household locations, prepared by spatially joining buildings and GADM shapes
    file = "{data_dir}/{country_code}/inputs/households.csv"  # file path   
    xy_cols =  ["lon", "lat"]    # longitude and latitude column names
    adm_cols = ["adm2", "adm3"]  # administrative levels column names

[results]  # Results generated by the scientific workflow 
control_file = "{data_dir}/{country_code}/results/{run_name}/.stop"            # Stop file for the given run
log_file = "{data_dir}/{country_code}/results/{run_name}/run.log"              # Log file for the scientific workflow
locations_file = "{data_dir}/{country_code}/results/{run_name}/locations.csv"  # Locations processed by the given run
viz_max_locations = 50  # Max number of locations to visualize on a map to mitigate performance degradation.

    [results.clusters]  # Clustered households, cluster centers, and cluster counts
    file = "{data_dir}/{country_code}/results/{run_name}/{location}/clustered_households.csv"     # file path
    centers_file = "{data_dir}/{country_code}/results/{run_name}/{location}/cluster_centers.csv"  # file path
    counts_file = "{data_dir}/{country_code}/results/{run_name}/{location}/cluster_counts.csv"    # file path
    xy_cols =  ["lon", "lat"]            # longitude and latitude column names
    adm_cols = ["adm2", "adm3", "adm4"]  # administrative levels column names
    data_cols = ["cluster"]              # cluster column name

    [results.shapes]  # Village shapes, generated as a cunvas hull of the clustered households
    file = "{data_dir}/{country_code}/results/{run_name}/{location}/village_shapes.geojson"  # file path
    adm_cols = ["adm2", "adm3", "adm4"]                                                      # administrative levels column names
    data_cols = ["cluster"]                                                                  # cluster column name

    [results.facilities]  # Recommedned optimal facility locations
    file = "{data_dir}/{country_code}/results/{run_name}/{location}/optimal_facilities.csv"  # file path
    xy_cols =  ["lon", "lat"]            # longitude and latitude column names
    adm_cols = ["adm2", "adm3", "adm4"]  # administrative levels column names
    data_cols = ["cluster", "village"]   # cluster and village column names                                             
    n_facilities = 3                     # Number of recommended facility locations per village
